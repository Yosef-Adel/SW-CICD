
- copy:
    src: roles/deploy/artifact.tar.gz
    dest: /home/ubuntu


- name: Extract artifact.tar.gz to EC2 
  unarchive:
    src: artifact.tar.gz
    dest: /home/ubuntu


- copy:
    src: roles/deploy/files/docker-compose.yml
    dest: /home/ubuntu


- name: Run command
  shell: |
    echo "Hello, world!"


- name: Pull image
  shell: |
    ls
    docker-compose pull
  
  args:
    chdir: ./


- name: Start application
  shell: |
    docker-compose up -d
  args:
    chdir: ./







- name: Install Certbot and Nginx
      apt:
        name:
          - certbot
          - python3-certbot-nginx
          - nginx
        state: present

- name: Configure Nginx for HTTPS
    replace:
      path: /etc/nginx/sites-available/{{ your_domain_name }}
      regexp: '(listen 80)'
      replace: 'listen 443 ssl'
    notify: Restart Nginx


- name: Add HTTPS redirect to Nginx configuration
      replace:
        path: /etc/nginx/sites-available/{{ your_domain_name }}
        regexp: '(server_name.*;)'
        replace: '\1\n\nif ($scheme != "https") {\n    return 301 https://$server_name$request_uri;\n}\n'
      notify: Restart Nginx

- name: Add reverse proxy configuration to Nginx
      replace:
        path: /etc/nginx/sites-available/{{ your_domain_name }}
        regexp: '(location / {)'
        replace: '\1\n    proxy_pass http://localhost:3000;'
      notify: Restart Nginx

- name: Restart Nginx
    systemd:
      name: nginx
      state: restarted











# - name: Install NGINX
#   become: True
#   shell: |
#     apt -y install nginx
#     rm -rf /etc/nginx/sites-available/default

# - copy:
#     src: roles/deploy/tasks/default
#     dest: /etc/nginx/sites-available/default


# - name: check NGINX
#   become: True
#   shell: |
#     nginx -t
#     service nginx restart