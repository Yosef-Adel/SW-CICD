 stage('deploy-infrastructure') {
         agent {
                    docker { image 'yosefadel/aws-node' }
                }
            environment {
                AWS_DEFAULT_REGION="us-east-1"
            }
           steps {
           withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
            sh '''
                aws cloudformation deploy \
                --template-file  files/backend.yml \
                --tags Project=SW-project \
                --stack-name "SW-project-backend-${BUILD_ID}" \
                --parameter-overrides ID="${BUILD_ID}"  
                aws ec2 describe-instances \
                --filters "Name=tag:Name,Values=backend-${BUILD_ID}" \
                --query 'Reservations[*].Instances[*].PublicIpAddress' \
                --output text >> ansible/inventory.txt
 
            '''
             stash name: 'invFile', includes: 'inventory.txt'

           }
            
       }
       }

       stage ('configure-infrastructure') {
        
        steps {
            sh ' cd ansible '
            unstash 'invFile'
            sh ''' 
            cat inventory.txt 
            echo "Test Webchoock"
            
            ansible-playbook -i inventory.txt --private-key=$ANSIBLE_PRIVATE_KEY configure-server.yml

            '''
          

        }
       }





       pipeline {
    agent any
    stages {
        stage('deploy-infrastructure') {
            agent {
                docker { image 'yosefadel/aws-node' }
            }
            environment {
                AWS_DEFAULT_REGION="us-east-1"
            }
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                        aws cloudformation deploy \
                        --template-file files/backend.yml \
                        --tags Project=SW-project \
                        --stack-name "SW-project-backend-${BUILD_ID}" \
                        --parameter-overrides ID="${BUILD_ID}"
                        
                        aws ec2 describe-instances \
                        --filters "Name=tag:Name,Values=backend-${BUILD_ID}" \
                        --query 'Reservations[*].Instances[*].PublicIpAddress' \
                        --output text >> ansible/inventory.txt
                    '''
                    stash name: 'invFile', includes: 'ansible/inventory.txt'
                }
            }
        }
        stage('configure-infrastructure') {
            steps {
                dir('ansible') {
                    unstash 'invFile'
                    sh ''' 
                        cat inventory.txt 
                        echo "Test Webhook"
                        ansible-playbook -i inventory.txt --private-key=$ANSIBLE_PRIVATE_KEY configure-server.yml
                    '''
                }
            }
        }
    }
}
