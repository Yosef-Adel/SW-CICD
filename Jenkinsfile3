pipeline {
    agent any 
    environment {
        WORKFLOW_ID = "${BUILD_ID}"
    }
    stages {
    
        stage('Build Frontend') {
        agent {
            docker {
            image 'node:13.8.0'
            }
        }
        steps {
            checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'git-cli', url: 'https://github.com/Yosef-Adel/SW-FRNT-Project.git']])
            sh 'cd frontend && npm install && npm run build'
            stash(name: 'frontend-build', includes: 'frontend/node_modules/**')
        }

        }

        stage('Build Backend') {
        agent {
            docker {
            image 'node:13.8.0'
            }
        }
        steps {
            checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'git-cli', url: 'https://github.com/Yosef-Adel/SW-BACKEND-Project.git']])
            sh 'cd backend && npm install && npm run build'
            stash(name: 'backend-build', includes: 'backend/node_modules/**')
        }
        }
        stage('Test Frontend') {
        agent {
            docker {
            image 'node:13.8.0'
            }
        }
        steps {
            checkout()
            unstash 'frontend-build'
            sh 'cd frontend && npm install && npm run test'
        }
        }
        stage('Test Backend') {
        agent {
            docker {
            image 'node:13.8.0'
            }
        }
        steps {
            checkout()
            unstash 'backend-build'
            sh 'cd backend && npm install && npm run test'
        }
        }
        stage('Scan Frontend') {
        agent {
            docker {
            image 'node:13.8.0'
            }
        }
        steps {
            checkout()
            unstash 'frontend-build'
            sh 'cd frontend && npm install && npm audit fix --audit-level=critical --force'
        }
        }
        stage('Scan Backend') {
        agent {
            docker {
            image 'node:13.8.0'
            }
        }
        steps {
            checkout()
            unstash 'backend-build'
            sh 'cd backend && npm install && npm audit fix --audit-level=critical --force'
        }
        }





    }







}